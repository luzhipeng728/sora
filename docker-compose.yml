services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: sora-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-sora}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-sora_password_change_me}
      POSTGRES_DB: ${POSTGRES_DB:-sora_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-sora}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sora-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sora-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://${POSTGRES_USER:-sora}:${POSTGRES_PASSWORD:-sora_password_change_me}@postgres:5432/${POSTGRES_DB:-sora_db}
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-here-change-in-production}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      SORA_API_URL: ${SORA_API_URL}
      SORA_API_TOKEN: ${SORA_API_TOKEN}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost}
    ports:
      - "${BACKEND_PORT:-3000}:3000"
    volumes:
      - backend_logs:/app/logs
    networks:
      - sora-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ${VITE_API_URL:-http://localhost:3000}
    container_name: sora-frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "${FRONTEND_PORT:-80}:80"
    networks:
      - sora-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  backend_logs:
    driver: local

networks:
  sora-network:
    driver: bridge
